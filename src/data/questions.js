export const questions = [
    {
        id: 1,
        lessonId: 1,
        text: "ما هي الآلات ذات البرامج الثابتة؟",
        options: [
            "آلات يمكن وضع برامج متعددة لها",
            "آلات لا يمكن وضع برامج لها وتعطي نتيجة واحدة فقط",
            "آلات تحتاج إلى لغات برمجة خاصة",
            "آلات تنفذ مدخلات متعددة"
        ],
        correctAnswer: 1
    },
    {
        id: 2,
        lessonId: 1,
        text: "ما هو مثال على الآلات ذات البرامج الثابتة؟",
        options: [
            "الحاسوب",
            "الهاتف الذكي",
            "نول الخياطة",
            "جهاز التلفاز الذكي"
        ],
        correctAnswer: 2
    },
    {
        id: 3,
        lessonId: 1,
        text: "أي من التالي ليس من مكونات الذاكرة الرئيسية؟",
        options: [
            "ذاكرة الوصول العشوائي (RAM)",
            "ذاكرة القراءة فقط (ROM)",
            "القرص الصلب (Hard Disk)",
            "ذاكرة الكاش (Cache)"
        ],
        correctAnswer: 2
    },
    {
        id: 4,
        lessonId: 1,
        text: "ما هي وظيفة وحدة المعالجة المركزية (CPU)؟",
        options: [
            "تخزين البيانات بشكل دائم",
            "تنفيذ العمليات الحسابية والمنطقية",
            "عرض النتائج والمعلومات",
            "إدخال البيانات إلى الحاسوب"
        ],
        correctAnswer: 1
    },
    {
        id: 5,
        lessonId: 1,
        text: "ما هي خصائص لغات الجيل الأول في البرمجة؟",
        options: [
            "تعتمد على فكرة الصفوف والأغراض",
            "تعرّف من قبل الشركة المصنعة وتختلف باختلاف الآلة",
            "تركز على توصيف المهمة دون توضيح خطوات التنفيذ",
            "تعتمد على فكرة الإجراءات (التوابع)"
        ],
        correctAnswer: 1
    },
    {
        id: 6,
        lessonId: 1,
        text: "أي من اللغات التالية تنتمي إلى الجيل الثاني من لغات البرمجة؟",
        options: ["Java", "C", "SQL", "Prolog"],
        correctAnswer: 1
    },
    {
        id: 7,
        lessonId: 1,
        text: "أي من اللغات التالية تعتبر لغة برمجة غرضية التوجه (OOP)؟",
        options: ["C#", "Fortran", "SQL", "Assembly"],
        correctAnswer: 0
    },
    {
        id: 8,
        lessonId: 1,
        text: "إلى أي جيل من لغات البرمجة تنتمي لغة SQL؟",
        options: [
            "الجيل الأول",
            "الجيل الثاني",
            "الجيل الثالث",
            "الجيل الرابع"
        ],
        correctAnswer: 3
    },
    {
        id: 9,
        lessonId: 1,
        text: "ما هي خصائص لغات الجيل الخامس؟",
        options: [
            "تعتمد على فكرة الإجراءات",
            "تعتمد على فكرة الصفوف والأغراض",
            "يحل الحاسب المسألة دون تدخل المبرمج",
            "تكتب مباشرة بلغة الآلة"
        ],
        correctAnswer: 2
    },
    {
        id: 10,
        lessonId: 1,
        text: "ما الفرق الأساسي بين الخوارزمية والبرنامج؟",
        options: [
            "الخوارزمية مكتوبة بلغة برمجة بينما البرنامج موجه للإنسان",
            "الخوارزمية موجهة للإنسان بينما البرنامج موجه للحاسب",
            "الخوارزمية لها زمن تنفيذ غير محدود بينما البرنامج له زمن تنفيذ محدود",
            "الخوارزمية يفهمها الحاسب بينما البرنامج يفهمه الإنسان"
        ],
        correctAnswer: 1
    },
    {
        id: 11,
        lessonId: 1,
        text: "ما هي أشكال كتابة الخوارزميات؟",
        options: [
            "لغة نصية ولغة الآلة",
            "لغة نصية ولغة بيانية (مخطط تدفقي)",
            "لغة بيانية وكود برمجي",
            "لغة نصية وكود برمجي"
        ],
        correctAnswer: 1
    },
    {
        id: 12,
        lessonId: 1,
        text: "أي من الآتي يعتبر من خطوات كتابة الخوارزمية؟",
        options: [
            "الترجمة، التنفيذ، التصحيح",
            "القراءة، الإسناد، الإدخال",
            "القراءة، الكتابة، الإسناد، الشرط، التكرار",
            "التصميم، البرمجة، الاختبار"
        ],
        correctAnswer: 2
    },
    {
        id: 13,
        lessonId: 1,
        text: "ما هو الشكل الصحيح لخطوة الإسناد في الخوارزمية؟",
        options: [
            `\`x + y → z\``,
            `\`z → x + y\``,
            `\`z ← x + y\``,
            `\`z == x + y\``
        ],
        correctAnswer: 2
    },
    {
        id: 14,
        lessonId: 1,
        text: "في الخوارزمية، متى تستخدم عملية القراءة (الدخل)؟",
        options: [
            "لإدخال شيء من خارج الآلة",
            "لقراءة قيمة متغير موجود",
            "لعرض النتائج على الشاشة",
            "لتنفيذ عمليات حسابية"
        ],
        correctAnswer: 0
    },
    {
        id: 15,
        lessonId: 1,
        text: "ما الذي يجب مراعاته عند استخدام التكرار في الخوارزمية؟",
        options: [
            "يجب وضع شرط خروج دائماً",
            "يجب أن تكون الحلقة غير منتهية",
            "يجب وضع خطوات تضمن التعديل على قيمة أحد المتحولات في الشرط",
            "لا توجد قيود على استخدام التكرار"
        ],
        correctAnswer: 2
    },
    {
        id: 16,
        lessonId: 1,
        text: "ما هو الفرق بين الثابت والمتغير؟",
        options: [
            "الثابت قيمة لحظية قابلة للتغيير بينما المتغير قيمة ثابتة",
            "الثابت قيمة ثابتة من البداية إلى نهاية البرنامج بينما المتغير قيمة لحظية قابلة للتغيير",
            "الثابت له نوع محدد بينما المتغير ليس له نوع محدد",
            "لا يوجد فرق بينهما"
        ],
        correctAnswer: 1
    },
    {
        id: 17,
        lessonId: 1,
        text: "أي من الآتي يمثل طريقة كتابة صحيحة لسلسلة المحارف؟",
        options: ["'Hello'", '"Hello"', "@Hello@", "Hello"],
        correctAnswer: 1
    },
    {
        id: 18,
        lessonId: 1,
        text: "ما هي أولوية العمليات الحسابية الصحيحة؟",
        options: [
            "الجمع والطرح، الضرب والقسمة، الأقواس، الأس والجذر",
            "الأس والجذر، الأقواس، الضرب والقسمة، الجمع والطرح",
            "الأقواس، الأس والجذر، الضرب والقسمة، الجمع والطرح",
            "الأقواس، الجمع والطرح، الضرب والقسمة، الأس والجذر"
        ],
        correctAnswer: 1
    },
    {
        id: 19,
        lessonId: 1,
        text: "ما الشكل المستخدم في المخطط التدفقي للتعبير عن عملية القراءة أو الكتابة؟",
        options: ["متوازي الأضلاع", "مستطيل", "مثلث", "بيضاوي"],
        correctAnswer: 0
    },
    {
        id: 20,
        lessonId: 1,
        text: "أي من الآتي يمثل الشكل الصحيح لبداية ونهاية المخطط التدفقي؟",
        options: ["مستطيل", "متوازي الأضلاع", "معين", "بيضاوي"],
        correctAnswer: 3
    },
    {
        id: 21,
        lessonId: 1,
        text: "ما هو الرمز المستخدم للشرط في المخطط التدفقي؟",
        options: ["مستطيل", "بيضاوي", "معين", "متوازي الأضلاع"],
        correctAnswer: 2
    },
    {
        id: 22,
        lessonId: 1,
        text: "ما هي الذاكرة التي تُفقد محتوياتها عند انقطاع التيار الكهربائي؟",
        options: ["ROM", "RAM", "Hard Disk", "Flash Memory"],
        correctAnswer: 1
    },
    {
        id: 23,
        lessonId: 1,
        text: "أي من اللغات التالية تعتبر من لغات الذكاء الاصطناعي (الجيل الخامس)؟",
        options: ["C++", "Java", "Prolog", "SQL"],
        correctAnswer: 2
    },
    {
        id: 24,
        lessonId: 1,
        text: "ما هي صيغة الشرط البسيط (if) في الخوارزمية؟",
        options: [
            "إذا (الشرط) نفذ مجموعة تعليمات",
            "إذا كان (الشرط) نفذ مجموعة تعليمات وإلا نفذ مجموعة تعليمات أخرى",
            "طالما (الشرط) نفذ مجموعة تعليمات",
            "كرر نفذ مجموعة تعليمات حتى (الشرط)"
        ],
        correctAnswer: 0
    },
    {
        id: 25,
        lessonId: 1,
        text: "متى تعتبر حلقة التكرار غير منتهية؟",
        options: [
            "عندما تنفذ عدداً محدداً من المرات",
            "عندما لا يتم التعديل على قيمة أحد المتحولات في الشرط",
            "عندما تحتوي على شرط خروج",
            "عندما تنفذ أقل من مرة واحدة"
        ],
        correctAnswer: 1
    },
    {
        id: 26,
        lessonId: 2,
        text: "ما هي مراحل تنفيذ برنامج ++C بالترتيب الصحيح؟",
        options: [
            "Compiling، Precompiling، Linking، Run",
            "Precompiling، Compiling، Linking، Run",
            "Linking، Compiling، Precompiling، Run",
            "Run، Precompiling، Compiling، Linking"
        ],
        correctAnswer: 1
    },
    {
        id: 27,
        lessonId: 2,
        text: "ما هو نوع الخطأ الذي يحدث عند القسمة على صفر؟",
        options: [
            "خطأ منطقي (Logical Error)",
            "خطأ وقت التشغيل (Runtime Error)",
            "خطأ بنيوي (Syntax Error)",
            "خطأ الربط (Linking Error)"
        ],
        correctAnswer: 1
    },
    {
        id: 28,
        lessonId: 2,
        text: "ما هو نوع الخطأ الناتج عن استخدام تعليمة دون تضمين مكتبتها؟",
        options: [
            "خطأ منطقي (Logical Error)",
            "خطأ وقت التشغيل (Runtime Error)",
            "خطأ بنيوي (Syntax Error)",
            "خطأ الربط (Linking Error)"
        ],
        correctAnswer: 3
    },
    {
        id: 29,
        lessonId: 2,
        text: "أي من الخصائص التالية ليست من خصائص لغة ++C؟",
        options: [
            "غير حساسة للفراغات أو الأسطر",
            "معظم التعليمات تنتهي بـ ;",
            "غير حساسة للحروف الكبيرة والصغيرة",
            "يجب تضمين المكتبات في بداية الكود"
        ],
        correctAnswer: 2
    },
    {
        id: 30,
        lessonId: 2,
        text: `ما هي وظيفة التعليمة
\`;using namespace std\`
؟`,
        options: [
            "تضمين المكتبة الأساسية للغة",
            "تحديد نوع البيانات المستخدمة",
            `اختصار كتابة \`::std\` قبل كل تعليمة من مكتبة \`iostream\``,
            "إنشاء فضاء أسماء جديد"
        ],
        correctAnswer: 2
    },
    {
        id: 31,
        lessonId: 2,
        text: `ما هي أهمية التعليمة \`;return\`   في الدالة \`()main\` ؟`,
        options: [
            "تعيد قيمة للبرنامج",
            "تدل على أن البرنامج انتهى دون أخطاء",
            "تعيد 0 كناتج للعمليات الحسابية",
            "تصفر جميع المتغيرات المستخدمة"
        ],
        correctAnswer: 1
    },
    {
        id: 32,
        lessonId: 2,
        text: "أي من الأسماء التالية غير صالح كاسم متغير في لغة ++C؟",
        options: ["user_name", "userName", "user-name", "_userName"],
        correctAnswer: 2
    },
    {
        id: 33,
        lessonId: 2,
        text: "أي من التسميات التالية تتبع طريقة camelCase؟",
        options: [
            "Student_Grade",
            "STUDENT_GRADE",
            "studentGrade",
            "StudentGrade"
        ],
        correctAnswer: 2
    },
    {
        id: 34,
        lessonId: 2,
        text: "أي من التسميات التالية تتبع طريقة PascalCase؟",
        options: [
            "student_grade",
            "STUDENT_GRADE",
            "studentGrade",
            "StudentGrade"
        ],
        correctAnswer: 3
    },
    {
        id: 35,
        lessonId: 2,
        text: "أي نمط من المتغيرات يستخدم لتخزين القيم المنطقية في ++C؟",
        options: ["int", "char", "bool", "float"],
        correctAnswer: 2
    },
    {
        id: 36,
        lessonId: 2,
        text: "ما هو حجم متغير من نوع int بالبايت؟",
        options: ["1", "2", "4", "8"],
        correctAnswer: 2
    },
    {
        id: 37,
        lessonId: 2,
        text: "أي من التالي يمثل تعريفاً صحيحاً لمتغير من نوع double مع إسناد قيمة ابتدائية له؟",
        options: [
            `\`;double price\``,
            `\`;double price = 42.99\``,
            `\`;price = 42.99 double\``,
            `\`;price double = 42.99\``
        ],
        correctAnswer: 1
    },
    {
        id: 38,
        lessonId: 2,
        text: "أي من التالي يمثل تعريفاً صحيحاً لثابت باستخدام const؟",
        options: [
            `\`;const PI = 3.14\``,
            `\`;const float PI = 3.14\``,
            `\`;define PI 3.14#\``,
            `\`;PI const float = 3.14\``
        ],
        correctAnswer: 1
    },
    {
        id: 39,
        lessonId: 2,
        text: "أي من التالي يمثل تعريفاً صحيحاً لثابت باستخدام define#؟",
        options: [
            `
\`\`\`
#define PI = 3.14;
\`\`\`
`,
            `
\`\`\`
define PI 3.14;
\`\`\`
`,
            `
\`\`\`
#define PI 3.14
\`\`\`
`,
            `
\`\`\`
define# PI 3.14
\`\`\`
`
        ],
        correctAnswer: 2
    },
    {
        id: 40,
        lessonId: 2,
        text: "ما هي نتيجة العملية الحسابية 7/2 في لغة ++C؟",
        options: ["3.5", "3", "4", "2"],
        correctAnswer: 1
    },
    {
        id: 41,
        lessonId: 2,
        text: "ما هي نتيجة العملية الحسابية 7.0/2 في لغة ++C؟",
        options: ["3.5", "3", "4", "3.0"],
        correctAnswer: 0
    },
    {
        id: 42,
        lessonId: 2,
        text: "ما هي نتيجة العملية الحسابية 15 % 4 في لغة ++C؟",
        options: ["3", "3.75", "4", "0"],
        correctAnswer: 0
    },
    {
        id: 43,
        lessonId: 2,
        text: `ما هي قيمة المتغيرين x و y بعد   تنفيذ الكود التالي:<br> \`;++int x = 5; int y = x\``,
        options: [
            `\`x = 5, y = 5\``,
            `\`x = 6, y = 5\``,
            `\`x = 6, y = 6\``,
            `\`x = 5, y = 6\``
        ],
        correctAnswer: 1
    },
    {
        id: 44,
        lessonId: 2,
        text: `ما هي قيمة المتغيرين x و y بعد تنفيذ الكود التالي:<br> \`;int x = 5; int y = ++x\``,
        options: [
            `\`x = 5, y = 5\``,
            `\`x = 6, y = 5\``,
            `\`x = 6, y = 6\``,
            `\`x = 5, y = 6\``
        ],
        correctAnswer: 2
    },
    {
        id: 45,
        lessonId: 2,
        text: "أي من التعليمات التالية صحيحة لقراءة قيمتين في متغيرين x و y؟",
        options: [
            `\`;cin << x << y\``,
            `\`;cin >> x >> y\``,
            `\`;cout << x << y\``,
            `\`;cout >> x >> y\``
        ],
        correctAnswer: 1
    },
    {
        id: 46,
        lessonId: 2,
        text: "أي من التعليمات التالية صحيحة لطباعة قيمتين من متغيرين x و y؟",
        options: [
            `\`;cin << x << y\``,
            `\`;cin >> x >> y\``,
            `\`;cout << x << y\``,
            `\`;cout >> x >> y\``
        ],
        correctAnswer: 2
    },
    {
        id: 47,
        lessonId: 2,
        text: "ما هي التعليمة المستخدمة لطباعة سطر جديد في ++C؟",
        options: [
            `\`;cout << newline\``,
            `\`;cout << endl\``,
            `\`;cout << line\``,
            `\`;cout << end\``
        ],
        correctAnswer: 1
    },
    {
        id: 48,
        lessonId: 2,
        text: 'ما هي التعليمة الصحيحة لطباعة علامة الاقتباس المزدوجة " في ++C؟',
        options: [
            `
\`\`\`
cout << "\"";
\`\`\`
`,
            `
\`\`\`
cout << "\\\"";
\`\`\`
`,
            `
\`\`\`
cout << "\\\'";
\`\`\`
`,
            `
\`\`\`
cout << "\\\\";
\`\`\`
`
        ],
        correctAnswer: 1
    },
    {
        id: 49,
        lessonId: 2,
        text: `أي من التالي معادل للتعليمة<br>\`;i = i + 5\`؟`,
        options: [`\`;i += 5\``, `\`;i =+ 5\``, `\`;i + 5\``, `\`;i = 5\``],
        correctAnswer: 0
    },
    {
        id: 50,
        lessonId: 2,
        text: "ما هو النمط المناسب لتخزين قيمة 3.14159265358979 بدقة عالية؟",
        options: ["int", "float", "double", "char"],
        correctAnswer: 2
    },
    {
        id: 51,
        lessonId: 3,
        text: `ما هي النتيجة المتوقعة لتنفيذ الكود التالي؟
\`\`\`cpp
if (5 = 5) {
  cout << "متساويان";
} else {
  cout << "غير متساويين";
}
\`\`\`
`,
        options: [
            'سيطبع "متساويان"',
            'سيطبع "غير متساويين"',
            "خطأ في الصياغة (syntax error)",
            "لا شيء مما سبق"
        ],
        correctAnswer: 2
    },
    {
        id: 52,
        lessonId: 3,
        text: `ما هي القيمة التي ستطبع في المثال التالي؟
\`\`\`cpp
int time = 22;
if (time < 10) {
  cout << "صباح الخير";
} else if (time < 20) {
  cout << "نهار سعيد";
} else { 
  cout << "مساء الخير";
}
\`\`\`
`,
        options: ["صباح الخير", "نهار سعيد", "مساء الخير", "لا شيء مما سبق"],
        correctAnswer: 2
    },
    {
        id: 53,
        lessonId: 3,
        text: `ما هو الخطأ في الكود التالي؟
\`\`\`cpp
switch (day) {
  case 1:
    cout << "الاثنين";
  case 2:
    cout << "الثلاثاء";
  case 3:
    cout << "الأربعاء";
  default:
    cout << "الأحد";
}
\`\`\`
`,
        options: [
            "عدم وجود متغير day",
            "لا يمكن استخدام النصوص العربية",
            "عدم استخدام break بعد كل حالة",
            "لا يوجد أي خطأ"
        ],
        correctAnswer: 2
    },
    {
        id: 54,
        lessonId: 3,
        text: "ما هو الفرق الرئيسي بين حلقة while وحلقة do-while؟",
        options: [
            "لا يوجد فرق بينهما",
            "حلقة do-while تنفذ التعليمات مرة واحدة على الأقل قبل فحص الشرط",
            "حلقة while أسرع في التنفيذ",
            "حلقة do-while تستخدم مع المتغيرات الرقمية فقط"
        ],
        correctAnswer: 1
    },
    {
        id: 55,
        lessonId: 3,
        text: `ما هي النتيجة المتوقعة من تنفيذ الكود التالي؟ 
\`\`\`cpp
int x = 0;
while (x < 5) {
  if (x == 3)
    continue;
  cout << x << " ";
  x++;
}
\`\`\`
`,
        options: [
            `\`4 3 2 1 0\``,
            `\`4 2 1 0\``,
            `\`2 1 0\``,
            "سيدخل في حلقة لا نهائية"
        ],
        correctAnswer: 1
    },
    {
        id: 56,
        lessonId: 3,
        text: `ما هي النتيجة المتوقعة لتنفيذ الكود التالي؟
\`\`\`cpp
int n = 5;
for (int i = 1; i <= n; i++) {
  if (i == 3) break;
  cout << i << " ";
}
\`\`\`
`,
        options: [
            `\`5 4 3 2 1\``,
            `\`3 2 1\``,
            `\`2 1\``,
            "سيدخل في حلقة لا نهائية"
        ],
        correctAnswer: 2
    },
    {
        id: 57,
        lessonId: 3,
        text: `ما الذي يحدث عند تنفيذ الكود التالي؟ 
\`\`\`cpp
int x = 0;
if (x) {
  cout << "صحيح";
} else { 
  cout << "خاطئ";
}
\`\`\`
`,
        options: [
            'سيطبع "صحيح"',
            'سيطبع "خاطئ"',
            "خطأ في الصياغة",
            "لا شيء مما سبق"
        ],
        correctAnswer: 1
    },
    {
        id: 58,
        lessonId: 3,
        text: "أي من الحلقات التالية تُستخدم عندما نعرف عدد مرات التكرار مسبقاً؟",
        options: ["حلقة while", "حلقة do-while", "حلقة for", "جميع ما سبق"],
        correctAnswer: 2
    },
    {
        id: 59,
        lessonId: 3,
        text: `ما هي النتيجة المتوقعة من الكود التالي؟ 
\`\`\`cpp
int day = 2;
switch (day) {
  case 1:
    cout << "الاثنين";
    break;
  case 2:
    cout << "الثلاثاء";
    break;
  case 3:
    cout << "الأربعاء";
    break;
  default:
    cout << "الأحد";
}
\`\`\`
`,
        options: ["الاثنين", "الثلاثاء", "الأربعاء", "الأحد"],
        correctAnswer: 1
    },
    {
        id: 60,
        lessonId: 3,
        text: "متى يمكن استخدام switch بدلاً من if-else المتعددة؟",
        options: [
            "في أي حالة نريدها",
            "فقط عند التعامل مع المتغيرات من نوع int أو char",
            "فقط عند مقارنة القيم المتساوية",
            "لا يمكن استبدال if-else بـ switch أبداً"
        ],
        correctAnswer: 1
    },
    {
        id: 61,
        lessonId: 3,
        text: `ماهي نتيجة الكود التالي؟
\`\`\`cpp
int i = 1;
do {
  cout << i << " ";
  i++;
} while (i <= 0);
\`\`\`
`,
        options: [
            "لا يطبع شيئاً",
            'يطبع "1"',
            "يدخل في حلقة لا نهائية",
            "يطبع أعداداً سالبة"
        ],
        correctAnswer: 1
    },
    {
        id: 62,
        lessonId: 3,
        text: "أي مما يلي صحيح بخصوص تعليمة continue؟",
        options: [
            "تخرج من الحلقة بشكل كامل",
            "تنتقل مباشرة للدورة التالية في الحلقة",
            "تعيد تنفيذ الحلقة من البداية",
            "تجمد تنفيذ البرنامج مؤقتاً"
        ],
        correctAnswer: 1
    },
    {
        id: 63,
        lessonId: 3,
        text: `كيف يمكن كتابة الشرط التالي بشكل أكثر اختصاراً: 
\`\`\`cpp
if (x == true) {
  // التعليمات
}
\`\`\`
`,
        options: [
            `\`if (x = true)\``,
            `\`if (x)\``,
            `\`if (x != false)\``,
            "جميع ما سبق صحيح"
        ],
        correctAnswer: 1
    },
    {
        id: 64,
        lessonId: 3,
        text: `ماهي نتيجة الكود التالي؟ 
\`\`\`cpp
for (int i = 0, j = 10; i < 3; i++, j--) {
  cout << i << j << " ";
}
\`\`\`
`,
        options: [
            `\`212 111 010\``,
            `\`28 19 010\``,
            `\`37 28 19 010\``,
            `\`313 212 111 010\``
        ],
        correctAnswer: 1
    },
    {
        id: 65,
        lessonId: 3,
        text: "أي من الأخطاء التالية يُعتبر من الأخطاء الصعب إيجادها في لغة ++C؟",
        options: [
            "استخدام = بدلاً من == في الشروط",
            "عدم استخدام الأقواس المعقوفة {}",
            "نسيان الفاصلة المنقوطة ;",
            "تعشيش الحلقات بشكل خاطئ"
        ],
        correctAnswer: 0
    },
    {
        id: 66,
        lessonId: 4,
        text: "ما هو الترقيم الذي تبدأ به المصفوفات في لغة ++C؟",
        options: ["1", "0", "-1", "حسب تعريف المستخدم"],
        correctAnswer: 1
    },
    {
        id: 67,
        lessonId: 4,
        text: `ما الذي سيحدث عند تنفيذ الكود  التالي؟ <br>\`;int arr[5]; arr[5] = 10\``,
        options: [
            "سيتم تخزين القيمة 10 في العنصر السادس",
            "خطأ في الصياغة",
            "سلوك غير معرف (undefined behavior)",
            "سيتم تجاهل القيمة 10"
        ],
        correctAnswer: 2
    },
    {
        id: 68,
        lessonId: 4,
        text: `كم عدد العناصر في المصفوفة التالية؟ <br>\`;int numbers[] = { 5, 10, 15, 20, 25, 30 }\``,
        options: ["5", "6", "7", "غير محدد"],
        correctAnswer: 1
    },
    {
        id: 69,
        lessonId: 4,
        text: `ما هي القيمة المخزنة في العنصر التالي؟ 
\`\`\`cpp 
int arr[3][4] = {
  {1, 2, 3, 4}, 
  {5, 6, 7, 8}, 
  {9, 10, 11, 12}
}; 
int value = arr[1][2];
\`\`\`
`,
        options: ["3", "6", "7", "10"],
        correctAnswer: 2
    },
    {
        id: 70,
        lessonId: 4,
        text: `ما القيم التي سيتم تخزينها في  المصفوفة التالية؟ <br>\`;int arr[4] = {10}\``,
        options: [
            `\`0, 0, 0, 10\``,
            `\`10, 10, 10, 10\``,
            `\`garbage, garbage, garbage, 10\``,
            "خطأ في الصياغة"
        ],
        correctAnswer: 0
    },
    {
        id: 71,
        lessonId: 4,
        text: "ما الطريقة الصحيحة لإدخال عناصر مصفوفة ثنائية مكونة من 3 صفوف و 4 أعمدة؟",
        options: [
            `
\`\`\`cpp
cin >> arr[3][4];
\`\`\`
`,
            `
\`\`\`cpp
for(int i=0; i<3; i++) 
  cin >> arr[i];
\`\`\`
`,
            `
\`\`\`cpp
for(int i=0; i<3; i++) 
  for(int j=0; j<4; j++) 
    cin >> arr[i][j];
\`\`\`
`,
            `
\`\`\`cpp
cin >> arr;
\`\`\`
`
        ],
        correctAnswer: 2
    },
    {
        id: 72,
        lessonId: 4,
        text: `ما هي النتيجة المتوقعة للكود التالي؟ 
\`\`\`cpp 
int arr[2][3] = {
  {1, 2}, 
  {4, 5, 6}
}; 
cout << arr[0][2];
\`\`\`
`,
        options: ["خطأ في الصياغة", "قيمة عشوائية", "0", "2"],
        correctAnswer: 2
    },
    {
        id: 73,
        lessonId: 4,
        text: "ما هي الخاصية الصحيحة للمصفوفات؟",
        options: [
            "يمكن تغيير حجم المصفوفة بعد التعريف",
            "يمكن أن تحتوي المصفوفة على عناصر من أنواع مختلفة",
            "يتم تخزين العناصر بشكل متتالي في الذاكرة",
            "يمكن إدخال وإخراج المصفوفة بالكامل بتعليمة واحدة"
        ],
        correctAnswer: 2
    },
    {
        id: 74,
        lessonId: 4,
        text: "كيف يمكن تهيئة مصفوفة ثنائية بحيث تكون جميع العناصر صفراً؟",
        options: [
            `\`;int arr[3][3] = {0}\``,
            `\`;int arr[3][3] = {}\``,
            `\`;int arr[3][3] = {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}}\``,
            "الإجابتان ١ و ٢ صحيحتان"
        ],
        correctAnswer: 2
    },
    {
        id: 75,
        lessonId: 4,
        text: "ما هو الكود الصحيح لطباعة عناصر مصفوفة ثنائية بحيث تظهر كل صف في سطر منفصل؟",
        options: [
            `
\`\`\`cpp 
for(int i = 0; i < rows; i++) { 
  for(int j = 0; j < cols; j++) 
    cout << arr[i][j] << " ";
}
\`\`\`
`,
            `
\`\`\`cpp 
for(int i = 0; i < rows; i++) { 
  for(int j = 0; j < cols; j++) 
    cout << arr[i][j] << " "; 
  cout << endl;
}
\`\`\`
`,
            `
\`\`\`cpp 
for(int i = 0; i < rows; i++) 
  cout << arr[i] << endl;
\`\`\`
`,
            `
\`\`\`cpp 
for(int j = 0; j < cols; j++) { 
  for(int i = 0; i < rows; i++) 
    cout << arr[i][j] << " "; 
  cout << endl; 
}
\`\`\`
`
        ],
        correctAnswer: 1
    },
    {
        id: 76,
        lessonId: 5,
        text: "ما الفرق بين التمرير بالقيمة والتمرير بالمرجع؟",
        options: [
            "لا يوجد فرق بينهما",
            "التمرير بالقيمة لا يسمح بتغيير قيمة المتغير الأصلي، بينما التمرير بالمرجع يسمح بذلك",
            "التمرير بالمرجع أسرع دائماً من التمرير بالقيمة",
            "التمرير بالقيمة يعمل فقط مع المتغيرات البسيطة، والتمرير بالمرجع يعمل مع المصفوفات فقط"
        ],
        correctAnswer: 1
    },
    {
        id: 77,
        lessonId: 5,
        text: `ما هي النتيجة المتوقعة للكود التالي؟  
\`\`\`cpp 
void increment(int x) { 
  x++;
} 
int main() { 
  int a = 5; 
  increment(a); 
  cout << a; 
  return 0;
}
\`\`\`
`,
        options: ["4", "5", "6", "خطأ في الصياغة"],
        correctAnswer: 1
    },
    {
        id: 78,
        lessonId: 5,
        text: "ما هو تابع void في لغة ++C؟",
        options: [
            "تابع لا يستقبل أي وسطاء",
            "تابع لا يعيد أي قيمة",
            "تابع لا يحتوي على أي تعليمات برمجية",
            "تابع لا يمكن استدعاؤه من الدالة الرئيسية main"
        ],
        correctAnswer: 1
    },
    {
        id: 79,
        lessonId: 5,
        text: "أي من الأسطر التالية يحتوي على أخطاء في تعريف التابع؟",
        options: [
            `
\`\`\`cpp 
int max(int a, int b) { 
  if (a > b) 
    return a;
  else 
    return b; 
}
\`\`\`
`,
            `
\`\`\`cpp 
void print(int x) { 
  cout << x; 
}
\`\`\`
`,
            `
\`\`\`cpp 
float average(int a, b) { 
  return (a + b) / 2.0;
}
\`\`\`
`,
            `
\`\`\`cpp 
int sum(int a, int b) { 
  return a + b; 
}
\`\`\`
`
        ],
        correctAnswer: 2
    },
    {
        id: 80,
        lessonId: 5,
        text: `ما هي النتيجة المتوقعة للكود التالي؟ 
\`\`\`cpp 
void swap(int &x, int &y) { 
  int temp = x;
  x = y;
  y = temp;
} 
int main() { 
  int a = 3, b = 7;
  swap(a, b);
  cout << a << b;
  return 0;
}
\`\`\`
`,
        options: ["37", "73", "77", "33"],
        correctAnswer: 1
    },
    {
        id: 81,
        lessonId: 5,
        text: "ما هو مكان تعريف التوابع في البرنامج؟",
        options: [
            "يجب تعريفها بعد الدالة الرئيسية main",
            "يجب تعريفها داخل الدالة الرئيسية main",
            "يجب تعريفها قبل الدالة الرئيسية main",
            "يمكن تعريفها في أي مكان طالما يتم التصريح عنها قبل استخدامها"
        ],
        correctAnswer: 3
    },
    {
        id: 82,
        lessonId: 5,
        text: `ما هي النتيجة المتوقعة للكود التالي؟ 
\`\`\`cpp 
int multiple(int n) { 
  return n * n;
} 
int main() { 
  cout << multiple(4);
  return 0;
}
\`\`\`
`,
        options: ["4", "16", "24", "خطأ"],
        correctAnswer: 1
    },
    {
        id: 83,
        lessonId: 5,
        text: "ما الذي يحدث عند استدعاء تابع بدون وسطاء؟",
        options: [
            "خطأ في الصياغة",
            "يتم استدعاء التابع بشكل طبيعي إذا كان معرفاً بدون وسطاء",
            "يتم استدعاء التابع مع قيم افتراضية",
            "لا يمكن تعريف تابع بدون وسطاء في لغة ++C"
        ],
        correctAnswer: 1
    },
    {
        id: 84,
        lessonId: 5,
        text: "لماذا نستخدم التوابع في البرمجة؟",
        options: [
            "لتنفيذ الكود بشكل أسرع",
            "لإعادة استخدام نفس الشيفرة البرمجية عدة مرات دون تكرارها",
            "فقط للتحكم في الذاكرة وتحريرها بشكل أفضل",
            "لتجنب استخدام الحلقات التكرارية"
        ],
        correctAnswer: 1
    },
    {
        id: 85,
        lessonId: 5,
        text: `ما هي النتيجة المتوقعة للكود التالي؟  
\`\`\`cpp 
int getValue() { 
  return 5; 
}
int main() { 
  int x = getValue()
  x += 2;
  cout << x;
  return 0;
}
\`\`\`
`,
        options: ["2", "5", "7", "خطأ في الصياغة"],
        correctAnswer: 2
    },
    {
        id: 86,
        lessonId: 6,
        text: "ما هي الوسطاء الافتراضية في التوابع؟",
        options: [
            "قيم يتم استخدامها عند عدم تمرير قيمة للوسيط عند استدعاء التابع",
            "وسطاء يجب تمريرها دائماً عند استدعاء التابع",
            "متغيرات يتم تعريفها داخل التابع فقط",
            "قيم تُستخدم فقط عند حدوث خطأ في التابع"
        ],
        correctAnswer: 0
    },
    {
        id: 87,
        lessonId: 6,
        text: "أي من العبارات التالية صحيحة بخصوص الوسطاء الافتراضية؟",
        options: [
            "يمكن أن يكون للوسيط الأول قيمة افتراضية بينما الوسيط الثاني ليس له قيمة افتراضية",
            "إذا كان هناك وسيط له قيمة افتراضية، فجميع الوسطاء بعده يجب أن تكون لها قيم افتراضية أيضاً",
            "لا يمكن استدعاء التابع بعدد أقل من الوسطاء حتى لو كانت لها قيم افتراضية",
            "جميع الوسطاء يجب أن تكون لها قيم افتراضية أو لا تكون لأي منها"
        ],
        correctAnswer: 1
    },
    {
        id: 88,
        lessonId: 6,
        text: "ما الهدف من التصريح المسبق عن التوابع؟",
        options: [
            "تحسين أداء البرنامج",
            "زيادة مساحة الذاكرة المستخدمة",
            "السماح باستدعاء التابع قبل تعريفه في الكود",
            "تقليل حجم الكود المصدري"
        ],
        correctAnswer: 2
    },
    {
        id: 89,
        lessonId: 6,
        text: "ما المقصود بالتحميل الزائد للتوابع؟",
        options: [
            "إعطاء أكثر من قيمة مرجعة للتابع الواحد",
            "تعريف عدة توابع بنفس الاسم تختلف في عدد أو نوع الوسطاء",
            "استدعاء التابع أكثر من مرة في البرنامج",
            "زيادة عدد الوسطاء عن الحد المسموح به في لغة البرمجة"
        ],
        correctAnswer: 1
    },
    {
        id: 90,
        lessonId: 6,
        text: "ما الذي لا يُعتبر معياراً للتمييز بين التوابع في التحميل الزائد؟",
        options: [
            "عدد الوسطاء",
            "نوع الوسطاء",
            "نوع القيمة المرجعة (return type)",
            "ترتيب الوسطاء"
        ],
        correctAnswer: 2
    },
    {
        id: 91,
        lessonId: 6,
        text: "أين تُخزن المتغيرات المحلية في الذاكرة؟",
        options: [
            "في الـ Stack",
            "في الـ Heap",
            "في الـ Cache",
            "في الـ Register"
        ],
        correctAnswer: 0
    },
    {
        id: 92,
        lessonId: 6,
        text: "ما هي خصائص المتغيرات العامة؟",
        options: [
            "تُحذف من الذاكرة عند الخروج من نطاق التابع",
            "يمكن استخدامها فقط داخل التابع الذي عُرفت فيه",
            "تبقى في الذاكرة طوال فترة تنفيذ البرنامج ويمكن استخدامها من أي مكان",
            "تُهيأ من جديد مع كل استدعاء للتابع"
        ],
        correctAnswer: 2
    },
    {
        id: 93,
        lessonId: 6,
        text: "ما الذي يميز المتغيرات الثابتة static؟",
        options: [
            "تُهيأ مع كل استدعاء للتابع",
            "تحتفظ بقيمتها بين استدعاءات التابع",
            "لا يمكن تغيير قيمتها أبداً بعد تعريفها",
            "لا يمكن الوصول إليها من خارج التابع الذي عُرفت فيه"
        ],
        correctAnswer: 1
    },
    {
        id: 94,
        lessonId: 6,
        text: "عند تمرير مصفوفة إلى تابع، ماذا يحدث؟",
        options: [
            "يتم نسخ كامل المصفوفة وإرسال النسخة للتابع",
            "يتم تمرير مؤشر للعنصر الأول في المصفوفة (عنوانها في الذاكرة)",
            "يتم إرسال فقط العنصر الأول من المصفوفة",
            "يتم تحويل المصفوفة إلى متغير عادي قبل تمريرها"
        ],
        correctAnswer: 1
    },
    {
        id: 95,
        lessonId: 6,
        text: "عند تمرير مصفوفة ثنائية إلى تابع، ما الذي يجب تحديده في تعريف التابع؟",
        options: [
            "عدد الصفوف فقط",
            "عدد الأعمدة فقط",
            "عدد الصفوف وعدد الأعمدة معاً",
            "لا شيء، يمكن ترك الأبعاد فارغة"
        ],
        correctAnswer: 1
    },
    {
        id: 96,
        lessonId: 6,
        text: "أي مما يلي صحيح عند التعديل على المصفوفات داخل التوابع؟",
        options: [
            "أي تغيير على المصفوفة داخل التابع لن يؤثر على المصفوفة الأصلية",
            "أي تغيير على المصفوفة داخل التابع سيؤثر على المصفوفة الأصلية",
            "فقط التغييرات على العنصر الأول تؤثر على المصفوفة الأصلية",
            "يمكن اختيار ما إذا كان التغيير سيؤثر على المصفوفة الأصلية أم لا"
        ],
        correctAnswer: 1
    },
    {
        id: 97,
        lessonId: 6,
        text: `ما هو الاستدعاء الصحيح للتابع التالي: <br>\`int sum(int x, int y, int z = 0)\`؟`,
        options: [
            `\`sum(5)\``,
            `\`sum(5, 3)\``,
            `\`sum()\``,
            `\`sum(5, , 3)\``
        ],
        correctAnswer: 1
    },
    {
        id: 98,
        lessonId: 6,
        text: "لماذا يجب تمرير حجم المصفوفة كوسيط إضافي عند تمرير المصفوفة إلى تابع؟",
        options: [
            "لتحسين أداء البرنامج",
            "لأن التابع لا يستطيع معرفة حجم المصفوفة تلقائياً",
            "لزيادة أمان البرنامج فقط",
            "هذا ليس ضرورياً، يمكن للتابع معرفة حجم المصفوفة تلقائياً"
        ],
        correctAnswer: 1
    },
    {
        id: 99,
        lessonId: 7,
        text: "ما هي التوابع العودية؟",
        options: [
            "توابع تقوم باستدعاء نفسها",
            "توابع تستدعي توابع أخرى",
            "توابع تعيد قيمة للدالة الرئيسية",
            "توابع تكرارية تستخدم حلقات"
        ],
        correctAnswer: 0
    },
    {
        id: 100,
        lessonId: 7,
        text: "ما الذي يحدث إذا لم يتم وضع شرط توقف للتابع العودي؟",
        options: [
            "يعمل البرنامج بشكل طبيعي",
            "تحدث استدعاءات لا نهائية تؤدي إلى امتلاء ذاكرة الـ stack وحدوث خطأ Runtime",
            "يتوقف البرنامج تلقائياً بعد عدد محدد من الاستدعاءات",
            "يعود التابع بقيمة إفتراضية"
        ],
        correctAnswer: 1
    },
    {
        id: 101,
        lessonId: 7,
        text: "ما هي الأسئلة الثلاثة التي يجب الإجابة عليها عند كتابة تابع عودي؟",
        options: [
            "متى سيبدأ التابع، وكيف سيتكرر، ومتى سيتوقف",
            "متى يتوقف التابع، وكيف سيتم الاستدعاء بقيم وسطاء مختلفة، وكيف سيتم تركيب الحل النهائي",
            "ما هي المدخلات، وما هي المخرجات، وكيف يعمل التابع",
            "ما هو اسم التابع، وما هي الوسطاء، وما هو نوع القيمة المرجعة"
        ],
        correctAnswer: 1
    },
    {
        id: 102,
        lessonId: 7,
        text: "في الحل العودي لحساب العاملي، ما هو شرط التوقف؟",
        options: [
            `\`n < 0\``,
            `\`n >= 0\``,
            `\`n == 0 || n == 1\``,
            `\`n > 1\``
        ],
        correctAnswer: 2
    },
    {
        id: 103,
        lessonId: 7,
        text: `ما هي قيمة \`factorial(4)\` باستخدام التابع العودي التالي؟ 
\`\`\`cpp 
int factorial(int n) { 
  if(n == 0 || n == 1) return 1; 
  else return n * factorial(n-1); 
}
\`\`\`
`,
        options: ["10", "12", "24", "4"],
        correctAnswer: 2
    },
    {
        id: 104,
        lessonId: 7,
        text: `ما الذي سيحدث عند استدعاء التابع \`count_up(5)\`؟ 
\`\`\`cpp 
void count_up(int x) { 
  if(x > 1) count_up(x - 1);
  cout << x << endl;
}
\`\`\`
`,
        options: [
            "سيطبع الأرقام من 5 إلى 1 تنازلياً",
            "سيطبع الأرقام من 1 إلى 5 تصاعدياً",
            "سيطبع الرقم 5 فقط",
            "سيدخل في حلقة لا نهائية"
        ],
        correctAnswer: 1
    },
    {
        id: 105,
        lessonId: 7,
        text: `ما الذي سيحدث عند استدعاء التابع \`count_down(4)\`؟ 
\`\`\`cpp 
void count_down(int x) { 
  cout << x << endl; 
  if(x > 1) count_down(x-1);
}
\`\`\`
`,
        options: [
            "سيطبع الأرقام من 4 إلى 1 تنازلياً",
            "سيطبع الأرقام من 1 إلى 4 تصاعدياً",
            "سيطبع الرقم 4 فقط",
            "سيدخل في حلقة لا نهائية"
        ],
        correctAnswer: 0
    },
    {
        id: 106,
        lessonId: 7,
        text: `ما هي نتيجة استدعاء \`gcd(12, 8)\` باستخدام التابع العودي التالي؟ 
\`\`\`cpp 
int gcd(int x, int y) { 
  if(x == y) return x; 
  else if(x > y) return gcd(x - y, y); 
  else return gcd(y - x, x);
}
\`\`\`
`,
        options: ["4", "2", "8", "1"],
        correctAnswer: 0
    },
    {
        id: 107,
        lessonId: 7,
        text: "أي من العبارات التالية صحيحة بخصوص الحلول العودية مقارنة بالحلول التكرارية؟",
        options: [
            "الحل العودي دائماً أسرع من الحل التكراري",
            "الحل التكراري عادة أسرع من الحل العودي لأن الحل العودي يحتاج إلى ذاكرة إضافية للاستدعاءات المتكررة",
            "لا يوجد فرق في الأداء بين الحلين",
            "لا يمكن تحويل الحلول العودية إلى حلول تكرارية أبداً"
        ],
        correctAnswer: 1
    },
    {
        id: 108,
        lessonId: 7,
        text: "ما هي أهم نقطة يجب مراعاتها عند كتابة تابع عودي لتجنب المشاكل؟",
        options: [
            "تقليل عدد الوسطاء المستخدمة",
            "استخدام متغيرات عامة بدلاً من المحلية",
            "التأكد من وجود شرط توقف واضح",
            "استخدام متغيرات من نوع int فقط"
        ],
        correctAnswer: 2
    },
    {
        id: 109,
        lessonId: 8,
        text: "ما هي السجلات (Structs)؟",
        options: [
            "مصفوفات تخزن بيانات من نوع واحد",
            "طريقة لتجميع مجموعة من البيانات مختلفة النوع تحت مسمى واحد",
            "دوال تقوم بمعالجة البيانات",
            "هياكل بيانات تستخدم للبحث السريع"
        ],
        correctAnswer: 1
    },
    {
        id: 110,
        lessonId: 8,
        text: "ما الفرق الأساسي بين السجل والمصفوفة؟",
        options: [
            "السجل يمكنه تخزين بيانات من أنواع مختلفة، بينما المصفوفة تخزن عناصر من نوع واحد فقط",
            "السجل يمكنه تخزين عناصر محدودة العدد، بينما المصفوفة غير محدودة",
            "السجل يُستخدم في لغة C++ فقط، بينما المصفوفة متوفرة في جميع لغات البرمجة",
            "لا يوجد فرق جوهري بينهما"
        ],
        correctAnswer: 0
    },
    {
        id: 111,
        lessonId: 8,
        text: "ما هو الشكل الصحيح لتعريف سجل في C++؟",
        options: [
            `
\`\`\`
struct struct_name { 
  variable_type variable_name;
};
\`\`\`
`,
            `
\`\`\`
struct { 
  variable_type variable_name; 
} struct_name;
\`\`\`
`,
            `
\`\`\`
struct_name { 
  variable_type variable_name;
};
\`\`\`
            `,
            `
\`\`\`
struct variable_name { 
  struct_type struct_name; 
};
\`\`\`
`
        ],
        correctAnswer: 0
    },
    {
        id: 112,
        lessonId: 8,
        text: "كيف يتم الوصول إلى حقل في سجل؟",
        options: [
            `\`struct_name->field_name\``,
            `\`struct_name[field_name]\``,
            `\`struct_name.field_name\``,
            `\`field_name(struct_name)\``
        ],
        correctAnswer: 2
    },
    {
        id: 113,
        lessonId: 8,
        text: `في السجل التالي، ما هو الشكل الصحيح للوصول إلى سنة ميلاد الطالب؟ 
\`\`\`cpp 
struct birthday { 
  int year; 
  int month; 
  int day; 
}; 
struct student { 
  string name; 
  birthday date; 
};
\`\`\`
`,
        options: [
            `\`student.year\``,
            `\`student.birthday.year\``,
            `\`student.date.year\``,
            `\`student->date->year\``
        ],
        correctAnswer: 2
    },
    {
        id: 114,
        lessonId: 8,
        text: "إذا كان لدينا مصفوفة من السجلات، كيف نصل إلى حقل معين في عنصر محدد من المصفوفة؟",
        options: [
            `\`arr[index](field_name)\``,
            `\`arr[index].field_name\``,
            `\`arr.index.field_name\``,
            `\`arr.field_name[index]\``
        ],
        correctAnswer: 1
    },
    {
        id: 115,
        lessonId: 8,
        text: "ما هو مفهوم السجلات المتداخلة؟",
        options: [
            "سجلات متعددة منفصلة في نفس البرنامج",
            "سجل يحتوي على مصفوفة كأحد حقوله",
            "سجل يحتوي على سجل آخر كأحد حقوله",
            "سجل يستخدم داخل دالة"
        ],
        correctAnswer: 2
    },
    {
        id: 116,
        lessonId: 8,
        text: "أي من التالي يمكن أن يكون حقلاً في سجل؟",
        options: [
            "مصفوفة فقط",
            "متغيرات من نوع واحد فقط",
            "سجل آخر فقط",
            "جميع ما سبق (متغيرات بسيطة، مصفوفات، سجلات أخرى)"
        ],
        correctAnswer: 3
    },
    {
        id: 117,
        lessonId: 8,
        text: "عند استخدام تابع يتعامل مع السجلات، ما هو الشكل الصحيح لتمرير سجل كوسيط للتابع؟",
        options: [
            `
\`\`\`cpp 
void function(struct_type &struct_name) { 
  ...
}
\`\`\`
`,
            `
\`\`\`cpp 
void function(struct_type struct_name) { 
  ...
}
\`\`\`
`,
            `
\`\`\`cpp 
void function(struct struct_name) { 
  ...
}
\`\`\`
`,
            `
\`\`\`cpp 
void function(&struct_type struct_name) { 
  ... 
}
\`\`\`
`
        ],
        correctAnswer: 1
    },
    {
        id: 118,
        lessonId: 8,
        text: "في أي حالات يُفضَّل استخدام السجلات؟",
        options: [
            "عندما نحتاج إلى تخزين بيانات من نفس النوع",
            "عندما نحتاج إلى تجميع بيانات مختلفة النوع تحت اسم واحد",
            "فقط عند التعامل مع قواعد البيانات",
            "فقط في البرامج الكبيرة والمعقدة"
        ],
        correctAnswer: 1
    }
];
